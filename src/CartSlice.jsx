import { createSlice } from '@reduxjs/toolkit';

export const CartSlice = createSlice({
  name: 'cart',
  initialState: {
    items: [], // Initialize items as an empty array
  },
  reducers: {
    addItem: (state, action) => {
      const newItem = action.payload; // The plant object passed from ProductList
      const existingItem = state.items.find(item => item.name === newItem.name);

      if (existingItem) {
        // If the item already exists in the cart, just increase its quantity
        existingItem.quantity++;
      } else {
        // If it's a new item, add it to the cart with a quantity of 1
        state.items.push({ ...newItem, quantity: 1 });
      }
    },
    removeItem: (state, action) => {
      const itemNameToRemove = action.payload; // The name of the item to remove
      // Filter out the item that matches the name provided in the payload
      state.items = state.items.filter(item => item.name !== itemNameToRemove);
    },
    updateQuantity: (state, action) => {
      // Destructure the item's name and the new amount from the payload
      const { name, amount } = action.payload;
      // Find the item in the cart that needs its quantity updated
      const itemToUpdate = state.items.find(item => item.name === name);

      if (itemToUpdate) {
        // If the item is found, update its quantity to the new amount
        itemToUpdate.quantity = amount;
      }
    },
  },
});

// Export the action creators generated by createSlice
export const { addItem, removeItem, updateQuantity } = CartSlice.actions;

// Export the reducer as the default to be used in store.js
export default CartSlice.reducer;